name: Promote and Cleanup Secrets

on:
  workflow_dispatch:

jobs:
  promote-secrets:
    runs-on: ubuntu-latest

    env:
      ORG: microservices-final-project

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install gh -y

      - name: Authenticate with GitHub CLI
        run: |
          if [ -z "${{ secrets.GH_PAT }}" ]; then
            echo "ERROR: GH_PAT secret is not set"
            exit 1
          fi
          echo "${{ secrets.GH_PAT }}" | gh auth login --with-token
          gh auth status

      - name: Set Organization Secrets from this repo
        run: |
          # Define secrets list in the step where we'll use it
          secrets_list=(
            "DOCKERHUB_TOKEN:${{ secrets.DOCKERHUB_TOKEN }}"
            "DOCKERHUB_USERNAME:${{ secrets.DOCKERHUB_USERNAME }}"
            "ACR_NAME:${{ secrets.ACR_NAME }}"
            "DOCKER_USERNAME:${{ secrets.DOCKER_USERNAME }}"
            "DOCKER_PASSWORD:${{ secrets.DOCKER_PASSWORD }}"
            "AZURE_CLIENT_ID:${{ secrets.AZURE_CLIENT_ID }}"
            "AZURE_TENANT_ID:${{ secrets.AZURE_TENANT_ID }}"
            "AZURE_SUBSCRIPTION_ID:${{ secrets.AZURE_SUBSCRIPTION_ID }}"
            "AZURE_CLIENT_SECRET:${{ secrets.AZURE_CLIENT_SECRET }}"
            "CREDS:${{ secrets.CREDS }}"
            "RESOURCE_GROUP:${{ secrets.RESOURCE_GROUP }}"
          )

          for item in "${secrets_list[@]}"; do
            secret_name="${item%%:*}"
            secret_value="${item#*:}"
            
            if [ -z "$secret_value" ]; then
              echo "WARNING: Secret $secret_name is empty or not found"
              continue
            fi
            
            echo "Setting org secret: $secret_name"
            echo "$secret_value" | gh secret set "$secret_name" --org "$ORG" --visibility "selected" --repos "${{ github.repository }}"
          done

      - name: Delete secrets from current repo
        run: |
          secrets_list=("DOCKERHUB_TOKEN" "DOCKERHUB_USERNAME" "ACR_NAME" "DOCKER_USERNAME" "DOCKER_PASSWORD" 
                       "AZURE_CLIENT_ID" "AZURE_TENANT_ID" "AZURE_SUBSCRIPTION_ID" "AZURE_CLIENT_SECRET" 
                       "CREDS" "RESOURCE_GROUP")

          for secret in "${secrets_list[@]}"; do
            echo "Attempting to delete $secret from ${{ github.repository }}"
            gh secret delete "$secret" --repo "${{ github.repository }}" --yes || echo "Failed to delete $secret (may not exist)"
          done

      - name: Delete secrets from other repos
        run: |
          repos=("service-discovery" "cloud-config" "api-gateway" "proxy-client" "order-service" 
                 "payment-service" "product-service" "shipping-service" "user-service" "favourite-service")
          secrets_list=("DOCKERHUB_TOKEN" "DOCKERHUB_USERNAME" "ACR_NAME" "DOCKER_USERNAME" "DOCKER_PASSWORD" 
                       "AZURE_CLIENT_ID" "AZURE_TENANT_ID" "AZURE_SUBSCRIPTION_ID" "AZURE_CLIENT_SECRET" 
                       "CREDS" "RESOURCE_GROUP")

          for repo in "${repos[@]}"; do
            for secret in "${secrets_list[@]}"; do
              echo "Attempting to delete $secret from $ORG/$repo"
              gh secret delete "$secret" --repo "$ORG/$repo" --yes || echo "Failed to delete $secret from $repo (may not exist)"
            done
          done