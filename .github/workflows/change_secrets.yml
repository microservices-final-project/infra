name: Promote and Cleanup Secrets

on:
  workflow_dispatch:

jobs:
  promote-secrets:
    runs-on: ubuntu-latest

    env:
      ORG: microservices-final-project
      # Lista de secretos separados por espacios (formato m√°s seguro)
      SECRETS_LIST: "DOCKERHUB_TOKEN DOCKERHUB_USERNAME ACR_NAME DOCKER_USERNAME DOCKER_PASSWORD AZURE_CLIENT_ID AZURE_TENANT_ID AZURE_SUBSCRIPTION_ID AZURE_CLIENT_SECRET CREDS RESOURCE_GROUP"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install gh -y

      - name: Authenticate with GitHub CLI
        run: |
          if [ -z "${{ secrets.GH_PAT }}" ]; then
            echo "ERROR: GH_PAT secret is not set"
            exit 1
          fi
          echo "${{ secrets.GH_PAT }}" | gh auth login --with-token
          gh auth status

      - name: Set Organization Secrets from this repo
        run: |
          for secret in $SECRETS_LIST; do
            # Omitir RESOURCE_GROUP si no hay output de Terraform
            if [ "$secret" = "RESOURCE_GROUP" ]; then
              echo "Skipping RESOURCE_GROUP as tf_outputs is not available"
              continue
            fi
            
            value="${{ secrets[secret] }}"
            if [ -z "$value" ]; then
              echo "WARNING: Secret $secret is empty or not found"
              continue
            fi
            
            echo "Setting org secret: $secret"
            echo "$value" | gh secret set "$secret" --org "$ORG" --visibility "selected" --repos "${{ github.repository }}"
          done

      - name: Delete secrets from current repo
        run: |
          for secret in $SECRETS_LIST; do
            echo "Attempting to delete $secret from ${{ github.repository }}"
            gh secret delete "$secret" --repo "${{ github.repository }}" --yes || echo "Failed to delete $secret (may not exist)"
          done

      - name: Delete secrets from other repos
        run: |
          repos=("service-discovery" "cloud-config" "api-gateway" "proxy-client" "order-service" "payment-service" "product-service" "shipping-service" "user-service" "favourite-service")

          for repo in "${repos[@]}"; do
            for secret in $SECRETS_LIST; do
              echo "Attempting to delete $secret from $ORG/$repo"
              gh secret delete "$secret" --repo "$ORG/$repo" --yes || echo "Failed to delete $secret from $repo (may not exist)"
            done
          done